@startuml


[База данных] as DB
() "CRUD" as write

[DB] -- write

component "Система ведения задач" as Tasks {
    portin "Данные ПУФ" as Tasks.inData
    portin "Авторизация" as Tasks.auth
    portout "Данные о задачах" as Tasks.data

    [Каталог задач] as TaskDB
    [Раздел по управлению задачами] as TaskSection
    [Сервис по ведению задач] as TaskService

    () "CRUD" as taskWrite
    note right of taskWrite
        Create
        Read
        Update
        Delete
    end note
    () "Авторизация" as taskAuth
    () "Данные о задачах" as tasksData
    () "Данные ПУФ" as tasksInData
    note top of Tasks.inData
        Общие данные платформы управления флота
        (беспилотных автомобилей).
    end note

    [TaskService] --- [TaskSection]

    Tasks.auth -- taskAuth
    taskAuth )-- [TaskService]

    Tasks.inData -- tasksInData
    tasksInData )-- [TaskService]

    [TaskService] -right- tasksData
    tasksData )- Tasks.data

    [TaskService] --( taskWrite

    taskWrite -- [TaskDB]
}
write )-- Tasks.inData

[Раздел расписания] as ScheduleSection
() "Данные для\n соединения расписания с задачами" as ScheduleSection.taskLinks
ScheduleSection --( ScheduleSection.taskLinks

Tasks.data -left- ScheduleSection.taskLinks

component "Система бронирования" as Reservations {
    portin "Авторизация" as Reservations.auth
    portin "Данные ПУФ" as Reservations.inData
    portout "Данные бронирований" as Reservations.data

    [Каталог броней] as ReservationDB
    [Раздел по бронированию] as ReservationSection
    [Сервис по бронированию] as ReservationService

    () "CRUD" as reservationWrite
    () "Авторизация" as reservationAuth
    () "Данные ПУФ" as reservationsInData
    () "Данные бронирований" as reservationsData

    [ReservationService] --- [ReservationSection]

    Reservations.auth -- reservationAuth
    reservationAuth )-- [ReservationService]

    Reservations.inData -- reservationsInData
    reservationsInData )-- [ReservationService]

    [ReservationService] -left- reservationsData
    reservationsData )- Reservations.data

    [ReservationService] --( reservationWrite

    reservationWrite -- [ReservationDB]
}
write )-- Reservations.inData

() "Данные для\n составления расписания" as ScheduleSection.data
ScheduleSection --( ScheduleSection.data

ScheduleSection.data -down- Reservations.data

' component "Система авторизации" as A {
'     ' Made it 'out' so that it's in the bottom.
'     portout "Данные пользователя" as A.loginData
'     portout "Результат авторизации" as A.result

'     [Система шифрования\n и защиты данных]  as Defender
'     () "Зашифрованные\n данные" as encryptedData
'     [Авторизация] as AuthService

'     () "Логин, пароль" as loginData
'     () "Ошибка / токен" as result

'     A.loginData --( loginData
'     loginData -- [Defender]

'     [Defender] -right- encryptedData
'     encryptedData )- [AuthService]

'     [AuthService] -- result
'     result )-- A.result
' }

[Система авторизации] as A

[Админ-панель\nдля управления\n правами] as AdminPanel
() "Авторизация пользователя" as a

[A] -- a

a )-- Tasks.auth
a )-- Reservations.auth
a )-- [ScheduleSection]
a )-- [AdminPanel]

' Tasks.data --( write
' Reservations.data --( write
write )--- [ScheduleSection]
' [AdminPanel] --( write

@enduml
